{"version":3,"sources":["utils.js","components/LoginForm.js","components/FoodList.js","components/MyCart.js","components/SignupForm.js","App.js","reportWebVitals.js","index.js"],"names":["login","credential","username","password","loginUrl","fetch","method","headers","credentials","then","response","console","log","status","Error","signup","data","body","JSON","stringify","LoginForm","state","loading","onFinish","setState","message","success","props","onSuccess","catch","err","error","finally","render","name","style","width","margin","Item","rules","required","prefix","UserOutlined","placeholder","Password","LockOutlined","type","htmlType","React","Component","Option","Select","AddToCartButton","itemId","useState","setLoading","title","icon","PlusOutlined","onClick","addItemToCart","FoodList","curRest","setCurRest","restaurants","setRestaurants","foodData","setFoodData","useEffect","json","resData","restId","value","onSelect","map","item","id","grid","gutter","xs","sm","md","lg","xl","xxl","dataSource","renderItem","extra","src","imageUrl","alt","height","display","Text","Typography","MyCart","cartVisible","setCartVisible","cartData","setCartData","checking","setChecking","onCloseDrawer","shape","onClose","visible","footer","justifyContent","strong","totalPrice","marginRight","disabled","orderItemList","length","itemLayout","Meta","menuItem","description","price","SignupForm","displayModal","handleCancel","signupOnClick","onCancel","destroyOnClose","initialValues","remember","preserve","Header","Layout","Content","Title","App","authed","setAuthed","className","level","color","lineHeight","marginBottom","padding","maxHeight","overflowY","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.fc3b8d16.chunk.js","sourcesContent":["// login API\r\nexport const login = (credential) => {\r\n    // credential : {username: value, password: value}\r\n    // request option: method, url, data\r\n    const { username, password } = credential;\r\n    const loginUrl = `/login?username=${credential.username}&password=${credential.password}`;\r\n    //向后端发送请求\r\n    return fetch(loginUrl, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n    }).then (response => { // 后端response\r\n        console.log(response)\r\n        // case1: log in successful\r\n        // case2: log in fail\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to log in\")\r\n        }\r\n    })\r\n\r\n}\r\n\r\n\r\nexport const signup = (data) => {\r\n    const signupUrl = \"/signup\";\r\n\r\n    return fetch(signupUrl, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n    }).then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to sign up\");\r\n        }\r\n    });\r\n};\r\n\r\n// fetch restaurant menu data\r\nexport const getMenus = (restId) => {\r\n    return fetch(`/restaurant/${restId}/menu`).then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to get menus\");\r\n        }\r\n\r\n        return response.json();\r\n    });\r\n};\r\n\r\n// fetch restaurants data\r\nexport const getRestaurants = () => {\r\n    return fetch(\"/restaurants\").then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to get restaurants\");\r\n        }\r\n\r\n        return response.json();\r\n    });\r\n};\r\n\r\nexport const getCart = () => {\r\n    return fetch(\"/cart\").then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to get shopping cart data\");\r\n        }\r\n\r\n        return response.json();\r\n    });\r\n};\r\n\r\nexport const checkout = () => {\r\n    return fetch(\"/checkout\").then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to checkout\");\r\n        }\r\n    });\r\n};\r\n\r\nexport const addItemToCart = (itemId) => {\r\n    return fetch(`/order/${itemId}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n    }).then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to add menu item to shopping cart\");\r\n        }\r\n    });\r\n};\r\n","import { Button, Form, Input, message } from \"antd\";\r\nimport React from \"react\";\r\nimport { LockOutlined, UserOutlined } from \"@ant-design/icons\";\r\nimport { login } from \"../utils\";\r\n\r\nclass LoginForm extends React.Component {\r\n    state = {\r\n        loading: false,\r\n    };\r\n\r\n    onFinish = (data) => {\r\n        //set butten loading\r\n        this.setState({\r\n            loading: true,\r\n        });\r\n        login(data)\r\n            .then(() => { // login success\r\n                            // inform users\r\n                            // inform parent component App loged in\r\n                message.success(`Login Successful`);\r\n                this.props.onSuccess();\r\n            })\r\n            .catch((err) => { // login fail\r\n                message.error(err.message);\r\n            })\r\n            .finally(() => { // do whatever, set button not loading\r\n                this.setState({\r\n                    loading: false,\r\n                });\r\n            });\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <Form\r\n                name=\"normal_login\"\r\n                onFinish={this.onFinish}\r\n                style={{\r\n                    width: 300,\r\n                    margin: \"auto\",\r\n                }}\r\n            >\r\n                <Form.Item\r\n                    name=\"username\"\r\n                    rules={[{ required: true, message: \"Please input your Username!\" }]}\r\n                >\r\n                    <Input prefix={<UserOutlined />}\r\n                           placeholder=\"Username\" />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    name=\"password\"\r\n                    rules={[{ required: true, message: \"Please input your Password!\" }]}\r\n                >\r\n                    <Input.Password\r\n                        prefix={<LockOutlined />}\r\n                        type = 'password'\r\n                        placeholder=\"Password\" />\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\"\r\n                            loading={this.state.loading}>\r\n                        Login\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    };\r\n}\r\n\r\nexport default LoginForm;","import { Button, Card, List, message, Select, Tooltip } from \"antd\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { addItemToCart, getMenus, getRestaurants } from \"../utils\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst AddToCartButton = ( {itemId} ) => {\r\n    const[loading, setLoading] = useState(false);\r\n\r\n    const addToCart = () => {\r\n        // STEP1:\r\n        // STEP2:\r\n        //      STEP2.1: case1: success\r\n        //               case2: fail\r\n        //               finallly set loading -> false\r\n        setLoading(false);\r\n        addItemToCart(itemId)\r\n            .then( () => {\r\n                message.success(\"successfully add item\")\r\n            })\r\n            .catch( err => {\r\n                message.error(err.message)\r\n            })\r\n            .finally( () => {\r\n                setLoading(false);\r\n            })\r\n    }\r\n\r\n    return(\r\n        <Tooltip title=\"Add to shopping cart\">\r\n            <Button\r\n                icon={<PlusOutlined />}\r\n                type=\"primary\"\r\n                loading={loading}\r\n                onClick={addToCart}\r\n            />\r\n        </Tooltip>\r\n    );\r\n};\r\n\r\n\r\nfunction FoodList(props) {\r\n    const [curRest, setCurRest] = useState();\r\n    const [restaurants, setRestaurants] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [foodData, setFoodData] = useState([]);\r\n    useEffect(\r\n        () => {\r\n            setLoading(true);\r\n            getRestaurants()\r\n                .then( resData => {\r\n                    console.log(\"res data ->\", resData);\r\n                    setRestaurants(resData);\r\n                })\r\n                .catch( err => {\r\n                    console.log(\"err ->\", err.message);\r\n                })\r\n                .finally(() => {\r\n                    setLoading(false);\r\n                })\r\n        }\r\n        , [])\r\n\r\n    useEffect( () => {\r\n        if (curRest) {\r\n            setLoading(true);\r\n            getMenus(curRest)\r\n                .then((data) => {\r\n                    setFoodData(data);\r\n                })\r\n                .catch((err) => {\r\n                    message.error(err.message);\r\n                })\r\n                .finally(() => {\r\n                    setLoading(false);\r\n                });\r\n        }\r\n    }, [curRest])\r\n    return (\r\n        <div>\r\n            <Select value = {curRest}\r\n                    style={{ width: 300 }}\r\n                    onSelect={value => setCurRest(value)}\r\n                    placeholder= \"Select a restaurant\"\r\n                    loading = {loading}\r\n            >\r\n                {\r\n                    restaurants.map(item => {\r\n                        return <Option key={item.id}\r\n                                       value={item.id}>\r\n                            {item.name}\r\n                        </Option>\r\n                    })\r\n                }\r\n            </Select>\r\n            {\r\n                curRest &&\r\n                <List\r\n                    grid={{\r\n                        gutter: 16,\r\n                        xs: 1,\r\n                        sm: 2,\r\n                        md: 4,\r\n                        lg: 4,\r\n                        xl: 3,\r\n                        xxl: 3,\r\n                    }}\r\n\r\n                    dataSource = {foodData}\r\n                    renderItem = { item => (\r\n                        <List.Item>\r\n                            <Card title={item.name}\r\n                                  extra={<AddToCartButton itemId={item.id} />}>\r\n                                <img\r\n                                    src = {item.imageUrl}\r\n                                    alt={item.name}\r\n                                    style={{ height: 'auto', width: \"100%\", display: \"block\"}}\r\n                                />\r\n                            </Card>\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n            }\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default FoodList;","import { Button, Drawer, List, message, Typography } from \"antd\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { checkout, getCart } from \"../utils\";\r\n\r\nconst { Text } = Typography;\r\n\r\nconst MyCart = () => {\r\n    const [cartVisible, setCartVisible] = useState(false);\r\n    //set cart data status\r\n    const [cartData, setCartData] = useState();\r\n    //set loading status\r\n    const [loading, setLoading] = useState(false);\r\n    //set checking status\r\n    const [checking, setChecking] = useState(false);\r\n\r\n    useEffect(() => {\r\n        // case1: cart is visible  -> set loading=true -> fetch cart data\r\n        // case2: cart is not visible -> return\r\n        if (!cartVisible) {\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        getCart()\r\n            .then((data) => {\r\n                setCartData(data);\r\n            })\r\n            .catch((err) => {\r\n                message.error(err.message);\r\n            })\r\n            .finally(() => {\r\n                setLoading(false);\r\n            });\r\n    }, [cartVisible]);\r\n\r\n    const onCheckOut = () => {\r\n        setChecking(true);\r\n        checkout()\r\n            .then(() => {\r\n                message.success(\"Successfully checkout\");\r\n                setCartVisible(false);\r\n            })\r\n            .catch((err) => {\r\n                message.error(err.message);\r\n            })\r\n            .finally(() => {\r\n                setChecking(false);\r\n            });\r\n    };\r\n\r\n    const onCloseDrawer = () => {\r\n        setCartVisible(false);\r\n    };\r\n\r\n    const onOpenDrawer = () => {\r\n        setCartVisible(true);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button type=\"primary\" shape=\"round\" onClick={onOpenDrawer}>\r\n                Cart\r\n            </Button>\r\n            <Drawer\r\n                title=\"My Shopping Cart\"\r\n                onClose={onCloseDrawer}\r\n                visible={cartVisible}\r\n                width={520}\r\n                footer={\r\n                    <div\r\n                        style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                        }}\r\n                    >\r\n                        <Text strong={true}>{`Total price: $${cartData?.totalPrice}`}</Text>\r\n                        <div>\r\n                            <Button onClick={onCloseDrawer} style={{ marginRight: 8 }}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button\r\n                                onClick={onCheckOut}\r\n                                type=\"primary\"\r\n                                loading={checking}\r\n                                disabled={loading || cartData?.orderItemList.length === 0}\r\n                            >\r\n                                Checkout\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            >\r\n                <List\r\n                    loading={loading}\r\n                    itemLayout=\"horizontal\"\r\n                    dataSource={cartData?.orderItemList}\r\n                    renderItem={(item) => (\r\n                        <List.Item>\r\n                            <List.Item.Meta\r\n                                title={item.menuItem.name}\r\n                                description={`$${item.price}`}\r\n                            />\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n            </Drawer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MyCart;","import { Button, Form, Input, message, Modal } from \"antd\";\r\nimport React, {Component} from \"react\";\r\nimport { LockOutlined, UserOutlined } from \"@ant-design/icons\";\r\nimport { signup } from \"../utils\";\r\n\r\n\r\nclass SignupForm extends Component {\r\n\r\n    state = {\r\n        displayModal: false,\r\n    };\r\n\r\n    handleCancel = () => {\r\n        this.setState({\r\n            displayModal: false,\r\n        });\r\n    };\r\n\r\n    signupOnClick = () => {\r\n        this.setState({\r\n            displayModal: true,\r\n        });\r\n    };\r\n\r\n    onFinish = (data) => {\r\n        signup(data)\r\n            .then(() => {\r\n                this.setState({\r\n                    displayModal: false,\r\n                });\r\n                message.success(`Successfully signed up`);\r\n            })\r\n            .catch((err) => {\r\n                message.error(err.message);\r\n            });\r\n    };\r\n\r\n\r\n    render = () => {\r\n        return (\r\n            <>\r\n                <Button shape=\"round\" type=\"primary\" onClick={this.signupOnClick}>\r\n                    Register\r\n                </Button>\r\n                <Modal\r\n                    title=\"Register\"\r\n                    visible={this.state.displayModal}\r\n                    onCancel={this.handleCancel}\r\n                    footer={null}\r\n                    destroyOnClose={true}\r\n                >\r\n                    <Form\r\n                        name=\"normal_register\"\r\n                        initialValues={{ remember: true }}\r\n                        onFinish={this.onFinish}\r\n                        preserve={false}\r\n                    >\r\n                        <Form.Item\r\n                            name=\"email\"\r\n                            rules={[{ required: true, message: \"Please input your email!\" }]}\r\n                        >\r\n                            <Input prefix={<UserOutlined />} placeholder=\"Email\" />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            rules={[\r\n                                { required: true, message: \"Please input your password!\" },\r\n                            ]}\r\n                        >\r\n                            <Input prefix={<LockOutlined />} placeholder=\"Password\" />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"firstName\"\r\n                            rules={[\r\n                                { required: true, message: \"Please input your first name!\" },\r\n                            ]}\r\n                        >\r\n                            <Input placeholder=\"firstname\" />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"lastName\"\r\n                            rules={[\r\n                                { required: true, message: \"Please input your last name!\" },\r\n                            ]}\r\n                        >\r\n                            <Input placeholder=\"lastname\" />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                Register\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n            </>\r\n        );\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default  SignupForm","import { Layout, Typography } from \"antd\";\nimport { useState } from \"react\";\nimport LoginForm from \"./components/LoginForm\";\nimport FoodList from \"./components/FoodList\";\nimport MyCart from './components/MyCart'\nimport SignupForm from './components/SignupForm'\n\nimport \"./App.css\";\n\nconst { Header, Content } = Layout;\nconst { Title } = Typography;\n\nfunction App() {\n    const [authed, setAuthed] = useState(false);\n\n    return (\n        <Layout style={{ height: \"100vh\" }}>\n            <Header>\n                <div className=\"header\">\n                    <Title level={2}\n                           style={{ color: \"white\", lineHeight: \"inherit\", marginBottom: 0 }}\n                    >\n                        Lai Food\n                    </Title>\n                    <div>\n                        { authed\n                            ?\n                            <MyCart />\n                            :\n                            <SignupForm />\n                        }\n                    </div>\n                </div>\n            </Header>\n\n            <Content\n                style={{\n                    padding: \"50px\",\n                    maxHeight: \"calc(100% - 64px)\",\n                    overflowY: \"auto\",\n                }}\n            >\n                {\n                    authed\n                        ?\n                        <FoodList />\n                        :\n                        <LoginForm onSuccess={() => setAuthed(true)} />\n                }\n            </Content>\n        </Layout>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n // {/*</React.StrictMode>,*/}\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}